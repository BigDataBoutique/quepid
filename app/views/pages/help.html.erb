<div class="container p-t-20 p-b-20" style="padding-left: 150px; padding-right: 150px">

  <h2>All About Scripted Search Validation</h2>

  <h3>What's This? Why?</h3>
  <p>This feature lets you script specific tests to validate or score search results. Instead of the default model based on scored search results, this feature lets you write explicit unit-test like expectations or compute your own quality score for a given search.</p>

  <p>In the example below, we'll show a test for the search query "dog pound". When searching laws about "dog pound" you'd like to simply pass any law that mentions "dog" in the title.</p>

  <h3 style="padding-top: 1em">Great! How Do I Use It?</h3>

  <div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-5">
      <p style="padding-top: 25px" class="doc-desc pull-right">
        To begin, click on the "Custom scorers" link in the header.
      </p>
      <p style="padding-top: 100px" class="doc-desc pull-right">
        Next, click on the "New Scorer" button.
      </p>
      <p style="padding-top: 100px" class="doc-desc pull-right">
        After you've given your scorer a name, you can write your own scoring logic using Javascript (with our helpers -- see below) to validate your searches
      </p>
    </div>
    <div class="col-md-6">
      <%= image_tag "custom_scorer.gif", style: "max-width: 700px" %>
      <p  class="doc-desc pull-right">
        When saving, a message will appear if any errors were encountered when trying to run your code.
      </p>
    </div>
  </div>

  <h3 style="padding-top: 1em">What can my code do?</h3>
  <p>Your code validates the search results that came back. Below is an API available for you to work with:</p>
  <ul>
    <li> <code>docAt(i)</code> -- The Solr document at the i'th location in the displayed search results. from Solr including all fields displayed on Quepid. Empty object returned on no results.</li>
    <li> <code>docExistsAt(i)</code> -- Whether the i'th location has a document</li>
    <li> <code>eachDoc(function(doc, i) {})</code> -- Loop over docs. For each doc, call passed in function with a document, doc, and an index, i
    <li> <code>numFound()</code> -- Solr has found this many results</li>
    <li> <code>numReturned()</code> -- The total number of search results here</li>
    <li> <code>hasDocRating(i)</code> -- true if a Quepid rating has been applied to this document</li>
    <li> <code>docRating(i)</code> -- A document's rating for this query. This rating is relative to the scale you have chosen for your custom scorer</li>
    <li> <code>avgRating()</code> -- The average rating of the returned documents. This rating is relative to the scale you have chosen for your custom scorer</li>
    <li> <code>avgRating100()</code> -- The average rating of the returned documents. This rating is on a scale of 100 (i.e. the average score as a percentage)</li>
    <li> <code>editDistanceFromBest()</code> -- An edit distance from the best rated search results</li>
  </ul>
  <p>In addition to accessing the Solr documents, you also need to signal whether your test passes/fails or results in a specific score 1-100. A test said to be "failing" automatically results in a score of 0. A test that "passes" results in the query receiving a score of 100. If none of these happen, the query gets no score.</p>
  <p>Use these functions to test:</p>
  <ul>
    <li> <code>pass()</code> -- pass the test (score it 100), immediately exits
    <li> <code>fail()</code> -- fail the test (score it 0), immediately exits
    <li> <code>assert(condition)</code> -- continues if the condition is true, otherwise immediately fails the test and exits
    <li> <code>setScore(number)</code> -- sets the query's score to number and immediately exits
  </ul>

</div>
